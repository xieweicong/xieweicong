


[{"content":"","date":"January 5, 2025","externalUrl":null,"permalink":"/posts/code/","section":"Posts","summary":"","title":"","type":"posts"},{"content":"","date":"January 5, 2025","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":" true，false，nil # ","date":"January 5, 2025","externalUrl":null,"permalink":"/posts/code/%E5%85%B3%E4%BA%8Eruby%E4%BA%8C%E4%B8%89%E4%BA%8B_%E5%86%85%E7%BD%AE%E7%B1%BB%E7%9A%84%E4%BD%BF%E7%94%A8/","section":"Posts","summary":"","title":"关于Ruby二三事_内置类的使用","type":"posts"},{"content":"","date":"January 5, 2025","externalUrl":null,"permalink":"/tags/ruby/","section":"Tags","summary":"","title":"Ruby","type":"tags"},{"content":" 开篇 # 我成为一名 Ruby on Rails 开发已经一年的时间了，但对于 Ruby 我还是知之甚少，甚至从某种意义上来说我并不是很想深入了解。也许是一种并不好的执念，我在日本，我觉得 Ruby 只有日本在使用，而随着 Python 的发展，Rails 也可以被 Django 所代替。而其他的快速的 api 开发也完全被 flask 或者 FastAPI 所替代，使用 Python 也可以快速地在这个 AI 时代将自己开发的 AI 程序接入互联网。我也不是很清楚为什么 mac 的一些命令行工具，比如brew是使用 Ruby 开发，但我相信未来这样的东西也会越来越少。那为什么我还要写这一系列文章呢？\n事情的起因大约是我自己在使用 AI 生成一个很长的代码后，我想对代码进行更好的架构与重构。在这之中我看了一些资料，学到了关于 Python 的一些面向对象开发的知识。主要是读了这一系列文章one-python-craftsmanzh_CN12-write-solid-python-codes-part-1.md at master · pigleione-python-craftsman，也使用微信阅读找到了这位作者出的书，Python工匠。我才第一次读到了面向非新手的编程书籍，也由此读到了很多以前忽略的 Python 细节。于是我才开始思考，我所使用的工作语言 Ruby 是否也有类似的面向中级 Ruby 开发者的书籍呢？才找到了研鑽Rubyプログラミング 実践的なコードのための原則とトレードオフ这本书。\n二十几条设计原则的出现是在 90 年代，那时候面向对象编程也才刚刚开始，我读Python工匠时才知道原来那些我以前听说过的，膜拜的原则在更现代的编程语言下并不能完全适用，要结合本身语言的特性做一些修改。所以我就想到，与其使用 Python 来学习，为什么我不直接使用 Ruby 来学习呢？其实学习到的知识，越深入，越容易进行迁移。用 Ruby 学习，我也可以因为工作而动手实践。虽然我并不是那么喜欢 Ruby，但我似乎都没有给它一个认真面对的机会呢。于是有了接下来我会写的一系列文章，我会分享我读这一本书的一些感受与笔记，也许有机会还会扩充出去其他的一些关于 Ruby 的知识。\n","date":"January 5, 2025","externalUrl":null,"permalink":"/posts/code/%E5%85%B3%E4%BA%8Eruby%E4%BA%8C%E4%B8%89%E4%BA%8B_%E5%BC%80%E7%AF%87/","section":"Posts","summary":"","title":"关于Ruby二三事","type":"posts"},{"content":"In case you need to overwrite some Google\u0026rsquo;s libphonenumber library data, you need to assign file path to this setter. File should be Marshal.dump\u0026rsquo;ed with existing structure like in Phonelib.phone_data. Gem is simply doing merge between hashes.\nPhonelib.override_phone_data = \u0026#39;/path/to/override_phone_data.dat\u0026#39; In case you want to add some custom or still not updated regex patterns for certain type you can use additional regexes feature in a following way:\nPhonelib.add_additional_regex :us, Phonelib::Core::MOBILE, \u0026#39;[5]{10}\u0026#39; # this will add number 1-555-555-5555 to be valid Phonelib.add_additional_regex :gb, Phonelib::Core::MOBILE, \u0026#39;[1]{5}\u0026#39; # this will add number 44-11-111 to be valid # you can also specify all regexes using this method Phonelib.additional_regexes = [[:us, :mobile, \u0026#34;[5]{10}\u0026#34;], [:gb, :mobile, \u0026#34;[1]{5}\u0026#34;]] # or just use dump method to keep them altogether Phonelib.dump_additional_regexes # =\u0026gt; [[\u0026#34;US\u0026#34;, :mobile, \u0026#34;[5]{10}\u0026#34;], [\u0026#34;GB\u0026#34;, :mobile, \u0026#34;[1]{5}\u0026#34;] Phonelib.phone_data['JP']来获取需要的国家的格式化信息\nPhonelib.phone_data[\u0026#39;JP\u0026#39;] =\u0026gt; {:id=\u0026gt;\u0026#34;JP\u0026#34;, :country_code=\u0026gt;\u0026#34;81\u0026#34;, :international_prefix=\u0026gt;\u0026#34;010\u0026#34;, :national_prefix=\u0026gt;\u0026#34;0\u0026#34;, :national_prefix_for_parsing=\u0026gt;\u0026#34;(000[259]\\\\d{6})$|(?:(?:003768)0?)|0\u0026#34;, :national_prefix_transform_rule=\u0026gt;\u0026#34;\\\\1\u0026#34;, :mobile_number_portable_region=\u0026gt;\u0026#34;true\u0026#34;, :types=\u0026gt; {:general_desc=\u0026gt; {:national_number_pattern=\u0026gt;\u0026#34;00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\u0026#34;, :possible_number_pattern=\u0026gt;\u0026#34;\\\\d{8,17}|\\\\d{9}|\\\\d{10}\u0026#34;, :short=\u0026gt; {:national_number_pattern=\u0026gt;\u0026#34;[01]\\\\d\\\\d(?:\\\\d{7})?\u0026#34;, :possible_number_pattern=\u0026gt;\u0026#34;\\\\d{3}|\\\\d{10}\u0026#34;}}, :no_international_dialling=\u0026gt; {:possible_number_pattern=\u0026gt;\u0026#34;\\\\d{8,17}\u0026#34;, :national_number_pattern=\u0026gt; \u0026#34;00(?:777(?:[01]|(?:5|8\\\\d)\\\\d)|882[1245]\\\\d\\\\d)\\\\d\\\\d|00(?:37|66|78)\\\\d{6,13}\u0026#34;}, :fixed_line=\u0026gt; {:possible_number_pattern=\u0026gt;\u0026#34;\\\\d{9}\u0026#34;, :example_number=\u0026gt;\u0026#34;312345678\u0026#34;, :national_number_pattern=\u0026gt; \u0026#34;(?:1(?:1[235-8]|2[3-6]|3[3-9]|4[2-6]|[58][2-8]|6[2-7]|7[2-9]|9[1-9])|(?:2[2-9]|[36][1-9])\\\\d|4(?:[2-578]\\\\d|6[02-8]|9[2-59])|5(?:[2-589]\\\\d|6[1-9]|7[2-8])|7(?:[25-9]\\\\d|3[4-9]|4[02-9])|8(?:[2679]\\\\d|3[2-9]|4[5-9]|5[1-9]|8[03-9])|9(?:[2-58]\\\\d|[679][1-9]))\\\\d{6}\u0026#34;}, :mobile=\u0026gt; {:possible_number_pattern=\u0026gt;\u0026#34;\\\\d{10}\u0026#34;, :example_number=\u0026gt;\u0026#34;9012345678\u0026#34;, :national_number_pattern=\u0026gt;\u0026#34;[7-9]0[1-9]\\\\d{7}\u0026#34;}, :pager=\u0026gt; {:possible_number_pattern=\u0026gt;\u0026#34;\\\\d{10}\u0026#34;, :example_number=\u0026gt;\u0026#34;2012345678\u0026#34;, :national_number_pattern=\u0026gt;\u0026#34;20\\\\d{8}\u0026#34;}, :toll_free=\u0026gt; {:possible_number_pattern=\u0026gt;\u0026#34;\\\\d{8,17}\u0026#34;, :example_number=\u0026gt;\u0026#34;120123456\u0026#34;, :national_number_pattern=\u0026gt; \u0026#34;00777(?:[01]|5\\\\d)\\\\d\\\\d|(?:00(?:7778|882[1245])|(?:120|800\\\\d)\\\\d\\\\d)\\\\d{4}|00(?:37|66|78)\\\\d{6,13}\u0026#34;, :short=\u0026gt; {:possible_number_pattern=\u0026gt;\u0026#34;\\\\d{3}\u0026#34;, :example_number=\u0026gt;\u0026#34;110\u0026#34;, :national_number_pattern=\u0026gt;\u0026#34;11[089]\u0026#34;}}, :premium_rate=\u0026gt; {:possible_number_pattern=\u0026gt;\u0026#34;\\\\d{9}\u0026#34;, :example_number=\u0026gt;\u0026#34;990123456\u0026#34;, :national_number_pattern=\u0026gt;\u0026#34;990\\\\d{6}\u0026#34;}, :personal_number=\u0026gt; {:possible_number_pattern=\u0026gt;\u0026#34;\\\\d{9}\u0026#34;, :example_number=\u0026gt;\u0026#34;601234567\u0026#34;, :national_number_pattern=\u0026gt;\u0026#34;60\\\\d{7}\u0026#34;}, :voip=\u0026gt; {:possible_number_pattern=\u0026gt;\u0026#34;\\\\d{10}\u0026#34;, :example_number=\u0026gt;\u0026#34;5012345678\u0026#34;, :national_number_pattern=\u0026gt;\u0026#34;50[1-9]\\\\d{7}\u0026#34;}, :uan=\u0026gt; {:possible_number_pattern=\u0026gt;\u0026#34;\\\\d{9}\u0026#34;, :example_number=\u0026gt;\u0026#34;570123456\u0026#34;, :national_number_pattern=\u0026gt;\u0026#34;570\\\\d{6}\u0026#34;}, :short_code=\u0026gt; {:short=\u0026gt; {:possible_number_pattern=\u0026gt;\u0026#34;\\\\d{3}|\\\\d{10}\u0026#34;, :example_number=\u0026gt;\u0026#34;102\u0026#34;, :national_number_pattern=\u0026gt;\u0026#34;000[259]\\\\d{6}|1(?:0[24]|1[089]|44|89)\u0026#34;}}, :emergency=\u0026gt; {:short=\u0026gt; {:possible_number_pattern=\u0026gt;\u0026#34;\\\\d{3}\u0026#34;, :example_number=\u0026gt;\u0026#34;110\u0026#34;, :national_number_pattern=\u0026gt;\u0026#34;11[09]\u0026#34;}}, :sms_services=\u0026gt; {:short=\u0026gt; {:possible_number_pattern=\u0026gt;\u0026#34;\\\\d{10}\u0026#34;, :example_number=\u0026gt;\u0026#34;0002000000\u0026#34;, :national_number_pattern=\u0026gt;\u0026#34;000[259]\\\\d{6}\u0026#34;}}}, :formats=\u0026gt; [{:pattern=\u0026gt;\u0026#34;(\\\\d{4})(\\\\d{4})\u0026#34;, :leading_digits=\u0026gt;\u0026#34;00777[01]\u0026#34;, :format=\u0026gt;\u0026#34;$1-$2\u0026#34;, :intl_format=\u0026gt;\u0026#34;NA\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d{3})(\\\\d{3})(\\\\d{3})\u0026#34;, :national_prefix_formatting_rule=\u0026gt;\u0026#34;$NP$FG\u0026#34;, :leading_digits=\u0026gt;\u0026#34;(?:12|57|99)0\u0026#34;, :format=\u0026gt;\u0026#34;$1-$2-$3\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d{4})(\\\\d)(\\\\d{4})\u0026#34;, :national_prefix_formatting_rule=\u0026gt;\u0026#34;$NP$FG\u0026#34;, :leading_digits=\u0026gt; \u0026#34;1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\u0026#34;, :format=\u0026gt;\u0026#34;$1-$2-$3\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d{2})(\\\\d{3})(\\\\d{4})\u0026#34;, :national_prefix_formatting_rule=\u0026gt;\u0026#34;$NP$FG\u0026#34;, :leading_digits=\u0026gt;\u0026#34;60\u0026#34;, :format=\u0026gt;\u0026#34;$1-$2-$3\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d)(\\\\d{4})(\\\\d{4})\u0026#34;, :national_prefix_formatting_rule=\u0026gt;\u0026#34;$NP$FG\u0026#34;, :leading_digits=\u0026gt;\u0026#34;[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\u0026#34;, :format=\u0026gt;\u0026#34;$1-$2-$3\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d{2})(\\\\d{3})(\\\\d{4})\u0026#34;, :national_prefix_formatting_rule=\u0026gt;\u0026#34;$NP$FG\u0026#34;, :leading_digits=\u0026gt; \u0026#34;1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\u0026#34;, :format=\u0026gt;\u0026#34;$1-$2-$3\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d{3})(\\\\d{2})(\\\\d{4})\u0026#34;, :national_prefix_formatting_rule=\u0026gt;\u0026#34;$NP$FG\u0026#34;, :leading_digits=\u0026gt;\u0026#34;[14]|[289][2-9]|5[3-9]|7[2-4679]\u0026#34;, :format=\u0026gt;\u0026#34;$1-$2-$3\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d{4})(\\\\d{2})(\\\\d{3,4})\u0026#34;, :leading_digits=\u0026gt;\u0026#34;0077\u0026#34;, :format=\u0026gt;\u0026#34;$1-$2-$3\u0026#34;, :intl_format=\u0026gt;\u0026#34;NA\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d{4})(\\\\d{2})(\\\\d{4})\u0026#34;, :leading_digits=\u0026gt;\u0026#34;008\u0026#34;, :format=\u0026gt;\u0026#34;$1-$2-$3\u0026#34;, :intl_format=\u0026gt;\u0026#34;NA\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d{3})(\\\\d{3})(\\\\d{4})\u0026#34;, :national_prefix_formatting_rule=\u0026gt;\u0026#34;$NP$FG\u0026#34;, :leading_digits=\u0026gt;\u0026#34;800\u0026#34;, :format=\u0026gt;\u0026#34;$1-$2-$3\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d{2})(\\\\d{4})(\\\\d{4})\u0026#34;, :national_prefix_formatting_rule=\u0026gt;\u0026#34;$NP$FG\u0026#34;, :leading_digits=\u0026gt;\u0026#34;[257-9]\u0026#34;, :format=\u0026gt;\u0026#34;$1-$2-$3\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\u0026#34;, :leading_digits=\u0026gt;\u0026#34;0\u0026#34;, :format=\u0026gt;\u0026#34;$1-$2-$3\u0026#34;, :intl_format=\u0026gt;\u0026#34;NA\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d{4})(\\\\d{4})(\\\\d{4,5})\u0026#34;, :leading_digits=\u0026gt;\u0026#34;0\u0026#34;, :format=\u0026gt;\u0026#34;$1-$2-$3\u0026#34;, :intl_format=\u0026gt;\u0026#34;NA\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d{4})(\\\\d{5})(\\\\d{5,6})\u0026#34;, :leading_digits=\u0026gt;\u0026#34;0\u0026#34;, :format=\u0026gt;\u0026#34;$1-$2-$3\u0026#34;, :intl_format=\u0026gt;\u0026#34;NA\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d{4})(\\\\d{6})(\\\\d{6,7})\u0026#34;, :leading_digits=\u0026gt;\u0026#34;0\u0026#34;, :format=\u0026gt;\u0026#34;$1-$2-$3\u0026#34;, :intl_format=\u0026gt;\u0026#34;NA\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d{3})(\\\\d{2})(\\\\d{4})\u0026#34;, :leading_digits=\u0026gt;\u0026#34;(?:12|57|99)0\u0026#34;, :format=\u0026gt;\u0026#34;$1 $2 $3\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\u0026#34;, :leading_digits=\u0026gt;\u0026#34;(?:12|57|99)0\u0026#34;, :format=\u0026gt;\u0026#34;$1 $2 $3 $4\u0026#34;}, {:pattern=\u0026gt;\u0026#34;(\\\\d{3})(\\\\d{4})(\\\\d{2})\u0026#34;, :leading_digits=\u0026gt;\u0026#34;(?:12|57|99)0\u0026#34;, :format=\u0026gt;\u0026#34;$1 $2 $3\u0026#34;}]} 可以在其中寻找需要修改的部分，这一次需要修改日本手机号码中，以060开头的号码，使其允许以及格式化。在2024/12中旬之后会开放这个号码，但谷歌的原始数据更新缓慢。需要修改的部分如下：\ngeneral_desc: { national_number_pattern: \u0026#34;00[1-9]\\\\d{6,14}|[25-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\u0026#34;, possible_number_pattern: \u0026#34;\\\\d{8,17}|\\\\d{9}|\\\\d{10}\u0026#34;, short: { national_number_pattern: \u0026#34;[01]\\\\d\\\\d(?:\\\\d{7})?\u0026#34;, possible_number_pattern: \u0026#34;\\\\d{3}|\\\\d{10}\u0026#34; } }, { pattern: \u0026#34;(\\\\d{2})(\\\\d{4})(\\\\d{4})\u0026#34;, national_prefix_formatting_rule: \u0026#34;$NP$FG\u0026#34;, leading_digits: \u0026#34;[25-9]\u0026#34;, format: \u0026#34;$1-$2-$3\u0026#34; }, fixed_line: { possible_number_pattern: \u0026#34;\\\\d{9}\u0026#34;, example_number: \u0026#34;312345678\u0026#34;, national_number_pattern: \u0026#34;(?:1(?:1[235-8]|2[3-6]|3[3-9]|4[2-6]|[58][2-8]|6[2-7]|7[2-9]|9[1-9])|(?:2[2-9]|[36][1-9])\\\\d|4(?:[2-578]\\\\d|6[02-8]|9[2-59])|5(?:[2-589]\\\\d|6[1-9]|7[2-8])|7(?:[25-9]\\\\d|3[4-9]|4[02-9])|8(?:[2679]\\\\d|3[2-9]|4[5-9]|5[1-9]|8[03-9])|9(?:[2-58]\\\\d|[679][1-9]))\\\\d{6}\u0026#34; }, 主要是把其中的[257-9]换成[25-9]，然后运行下面的代码\ntemp_file = Rails.root.join(\u0026#39;config\u0026#39;, \u0026#39;jp_phone_data.dat\u0026#39;) File.open(temp_file, \u0026#39;wb\u0026#39;) do |file| Marshal.dump(jp_data, file) end Phonelib.override_phone_data = temp_file.to_s 这样可以生成文件，之后可以只运行下面的代码，就是打开文件并写入\ntemp_file = Rails.root.join(\u0026#39;config\u0026#39;, \u0026#39;jp_phone_data.dat\u0026#39;) Phonelib.override_phone_data = temp_file.to_s ","date":"January 5, 2025","externalUrl":null,"permalink":"/posts/code/%E5%85%B3%E4%BA%8Ephonelib%E5%BA%93%E5%9C%A8rails%E4%B8%AD%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%B9%E6%B3%95/","section":"Posts","summary":"","title":"关于Phonelib库在rails中的自定义方法","type":"posts"},{"content":"","date":"December 16, 2021","externalUrl":null,"permalink":"/tags/docker/","section":"Tags","summary":"","title":"Docker","type":"tags"},{"content":" 前言 # docker技术真的非常好用和方便，但看了很多文章很杂乱，所以整理一个从安装打包到上线的全过程\n安装doker # macOS最好直接官网下载GUI的版本安装\n在linex远程服务器上\ncurl -fsSL \u0026lt;https://get.docker.com\u0026gt; | bash -s docker --mirror Aliyun 修改允许的hosts # 在django中需要填入vps的地址或域名\n文件准备 # pip.conf # 这个是pip的配置文件，制作完成之后，将这个文件复制到虚拟机对应的pip根目录下，即可完成替换。主要功能是换成阿里云的镜像。在境外的话不需要这个。\n[global] index-url = \u0026lt;http://mirrors.aliyun.com/pypi/simple/\u0026gt; [install] trusted-host=mirrors.aliyun.com requirements.txt # 用下列代码快速导出本机或虚拟环境的所有依赖\npip freeze \u0026gt; requirements.txt Dockerfile # docker在创建时将会使用这个文件进行构建。比较特殊的是这个文件没有后缀名，所以像Mac就不能直接创建，使用touch命令执行生成。\ntouch Dockerfile vim Dockerfile FROM python:3.9 RUN mkdir -p /usr/src/app WORKDIR /usr/src/app COPY pip.conf /root/.pip/pip.conf COPY requirements.txt /usr/src/app/ RUN pip install -r /usr/src/app/requirements.txt RUN rm -rf /usr/src/app COPY . /usr/src/app CMD [ \u0026#34;python\u0026#34;, \u0026#34;./manage.py\u0026#34;, \u0026#34;runserver\u0026#34;, \u0026#34;0.0.0.0:8080\u0026#34;] CMD [ \u0026#34;python3\u0026#34;, \u0026#34;-m\u0026#34; , \u0026#34;flask\u0026#34;, \u0026#34;run\u0026#34;, \u0026#34;--host=0.0.0.0\u0026#34;] ##flask用这条，默认到5000端口 以官方库python:3.9为基础进行制作，实际是一个装有python3.9的Linux 运行命令创建新文件夹 /usr/src/app 确定工作路径 将本地的pip.conf复制到pip的根中进行替换 将requirements.txt复制到指定目录下 运行命令按照requirements.txt的内容进行pip安装 运行命令删除这个文件夹中的所有内容，-rf是递归强制删除 将整个项目复制到这个文件夹中 执行命令运行docker时，内部Django项目的运行命令，开放8080端口 flask用这条，默认到5000端口 制作镜像image # 这里就是执行这个Dockerfile文件了，随便给镜像取个名字my-django-app，后面的.表示当前文件夹，会自动寻找Dockerfile文件并执行。\ndocker build -t my-django-app . 运行容器 # 镜像完成我们就可以通过镜像制作容器了。-d表示开启守护进程模式将我们的项目后台挂起，-p映射端口。前面的是本机的端口，后面的是Docker内部镜像的端口，这边开放的端口由上面Dockerfile文件指定过。\ndocker run -d -p 8080:8080 my-django-app 访问 # 直接在浏览器内输入localhost:8080，即可查看效果。\n登录 # 执行login即可登录，Mac端是已经登录过的，直接运行代码就可以通过验证了，其他端输入DockerID和密码即可完成登录。\ndocker login 修改名称 # 需要根据你的用户名修改你镜像的名称，比我的用户名为xieweicong95，就需要在镜像前添加xieweicong95。\ndocker tag my-django-app xieweicong95/my-django-app 如果不修改的话会报错：denied: requested access to the resource is denied。因为默认是推送到library仓库中去的，当然没有权限。\n推送 # 直接填写完整的镜像名进行推送。\ndocker push xieweicong95/my-django-app 创建docker组避免重复输入sudo # 回到云端，在 Ubuntu 中所有的 docker 命令前面要加 sudo 执行管理员权限，或者\n添加docker組：\nsudo groupadd docker 将目前的用户 ”$USER“ 添加到docker组：\nsudo gpasswd -a $USER docker 執行newgrp docker或注銷/進入以激活對組的更改。\n拉取 # 和前面一样在云端登录docker，连接远程主机，填写完整的镜像名进行直接拉取即可。\ndocker pull xieweicong95/my-django-app 和本地一样运行\ndocker run -d -p 8080:8080 xieweicong95/my-django-app 服务器修改入站规则 # 如使用Amazon Lightsail，如下图所示修改出入站规则，开放上面指定的端口\n访问页面 # 通过 公用ip地址:8080 访问 django 服务\n","date":"December 16, 2021","externalUrl":null,"permalink":"/posts/code/docker%E4%BB%8E%E5%B8%83%E7%BD%AE%E5%88%B0%E4%B8%8A%E7%BA%BF/","section":"Posts","summary":"","title":"Docker从布置到上线","type":"posts"},{"content":"","externalUrl":null,"permalink":"/en/","section":"","summary":"","title":"","type":"page"},{"content":"","externalUrl":null,"permalink":"/about/","section":"","summary":"","title":"","type":"page"},{"content":"","externalUrl":null,"permalink":"/en/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/en/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/en/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","externalUrl":null,"permalink":"/en/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"}]